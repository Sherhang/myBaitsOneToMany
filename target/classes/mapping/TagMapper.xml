<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demoMysql.dao.TagMapper">
  <resultMap id="BaseResultMap" type="com.example.demoMysql.bean.Tag">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tag_name" jdbcType="VARCHAR" property="tagName" />
    <result column="child_kind_id" jdbcType="INTEGER" property="childKindId" />
    <result column="detail_id" jdbcType="INTEGER" property="detailId" />
    <result column="column_type" jdbcType="INTEGER" property="columnType" />
    <result column="time_type" jdbcType="INTEGER" property="timeType" />
    <result column="default_value" jdbcType="VARCHAR" property="defaultValue" />
    <result column="value_extra" jdbcType="VARCHAR" property="valueExtra" />
    <result column="id_support_type" jdbcType="VARCHAR" property="idSupportType" />
    <result column="demand_list" jdbcType="VARCHAR" property="demandList" />
    <result column="builder" jdbcType="VARCHAR" property="builder" />
    <result column="others" jdbcType="VARCHAR" property="others" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <collection column="id" property="siteTags" select="getSiteTags" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tag_name, child_kind_id, detail_id, column_type, time_type, default_value, value_extra, 
    id_support_type, demand_list, builder, others, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.example.demoMysql.bean.TagExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tag
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tag
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tag
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demoMysql.bean.TagExample">
    delete from tag
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demoMysql.bean.Tag">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tag (tag_name, child_kind_id, detail_id, 
      column_type, time_type, default_value, 
      value_extra, id_support_type, demand_list, 
      builder, others, created_at, 
      updated_at)
    values (#{tagName,jdbcType=VARCHAR}, #{childKindId,jdbcType=INTEGER}, #{detailId,jdbcType=INTEGER}, 
      #{columnType,jdbcType=INTEGER}, #{timeType,jdbcType=INTEGER}, #{defaultValue,jdbcType=VARCHAR}, 
      #{valueExtra,jdbcType=VARCHAR}, #{idSupportType,jdbcType=VARCHAR}, #{demandList,jdbcType=VARCHAR}, 
      #{builder,jdbcType=VARCHAR}, #{others,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demoMysql.bean.Tag">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tag
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tagName != null">
        tag_name,
      </if>
      <if test="childKindId != null">
        child_kind_id,
      </if>
      <if test="detailId != null">
        detail_id,
      </if>
      <if test="columnType != null">
        column_type,
      </if>
      <if test="timeType != null">
        time_type,
      </if>
      <if test="defaultValue != null">
        default_value,
      </if>
      <if test="valueExtra != null">
        value_extra,
      </if>
      <if test="idSupportType != null">
        id_support_type,
      </if>
      <if test="demandList != null">
        demand_list,
      </if>
      <if test="builder != null">
        builder,
      </if>
      <if test="others != null">
        others,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tagName != null">
        #{tagName,jdbcType=VARCHAR},
      </if>
      <if test="childKindId != null">
        #{childKindId,jdbcType=INTEGER},
      </if>
      <if test="detailId != null">
        #{detailId,jdbcType=INTEGER},
      </if>
      <if test="columnType != null">
        #{columnType,jdbcType=INTEGER},
      </if>
      <if test="timeType != null">
        #{timeType,jdbcType=INTEGER},
      </if>
      <if test="defaultValue != null">
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="valueExtra != null">
        #{valueExtra,jdbcType=VARCHAR},
      </if>
      <if test="idSupportType != null">
        #{idSupportType,jdbcType=VARCHAR},
      </if>
      <if test="demandList != null">
        #{demandList,jdbcType=VARCHAR},
      </if>
      <if test="builder != null">
        #{builder,jdbcType=VARCHAR},
      </if>
      <if test="others != null">
        #{others,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demoMysql.bean.TagExample" resultType="java.lang.Long">
    select count(*) from tag
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tag
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.tagName != null">
        tag_name = #{record.tagName,jdbcType=VARCHAR},
      </if>
      <if test="record.childKindId != null">
        child_kind_id = #{record.childKindId,jdbcType=INTEGER},
      </if>
      <if test="record.detailId != null">
        detail_id = #{record.detailId,jdbcType=INTEGER},
      </if>
      <if test="record.columnType != null">
        column_type = #{record.columnType,jdbcType=INTEGER},
      </if>
      <if test="record.timeType != null">
        time_type = #{record.timeType,jdbcType=INTEGER},
      </if>
      <if test="record.defaultValue != null">
        default_value = #{record.defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.valueExtra != null">
        value_extra = #{record.valueExtra,jdbcType=VARCHAR},
      </if>
      <if test="record.idSupportType != null">
        id_support_type = #{record.idSupportType,jdbcType=VARCHAR},
      </if>
      <if test="record.demandList != null">
        demand_list = #{record.demandList,jdbcType=VARCHAR},
      </if>
      <if test="record.builder != null">
        builder = #{record.builder,jdbcType=VARCHAR},
      </if>
      <if test="record.others != null">
        others = #{record.others,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tag
    set id = #{record.id,jdbcType=BIGINT},
      tag_name = #{record.tagName,jdbcType=VARCHAR},
      child_kind_id = #{record.childKindId,jdbcType=INTEGER},
      detail_id = #{record.detailId,jdbcType=INTEGER},
      column_type = #{record.columnType,jdbcType=INTEGER},
      time_type = #{record.timeType,jdbcType=INTEGER},
      default_value = #{record.defaultValue,jdbcType=VARCHAR},
      value_extra = #{record.valueExtra,jdbcType=VARCHAR},
      id_support_type = #{record.idSupportType,jdbcType=VARCHAR},
      demand_list = #{record.demandList,jdbcType=VARCHAR},
      builder = #{record.builder,jdbcType=VARCHAR},
      others = #{record.others,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demoMysql.bean.Tag">
    update tag
    <set>
      <if test="tagName != null">
        tag_name = #{tagName,jdbcType=VARCHAR},
      </if>
      <if test="childKindId != null">
        child_kind_id = #{childKindId,jdbcType=INTEGER},
      </if>
      <if test="detailId != null">
        detail_id = #{detailId,jdbcType=INTEGER},
      </if>
      <if test="columnType != null">
        column_type = #{columnType,jdbcType=INTEGER},
      </if>
      <if test="timeType != null">
        time_type = #{timeType,jdbcType=INTEGER},
      </if>
      <if test="defaultValue != null">
        default_value = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="valueExtra != null">
        value_extra = #{valueExtra,jdbcType=VARCHAR},
      </if>
      <if test="idSupportType != null">
        id_support_type = #{idSupportType,jdbcType=VARCHAR},
      </if>
      <if test="demandList != null">
        demand_list = #{demandList,jdbcType=VARCHAR},
      </if>
      <if test="builder != null">
        builder = #{builder,jdbcType=VARCHAR},
      </if>
      <if test="others != null">
        others = #{others,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demoMysql.bean.Tag">
    update tag
    set tag_name = #{tagName,jdbcType=VARCHAR},
      child_kind_id = #{childKindId,jdbcType=INTEGER},
      detail_id = #{detailId,jdbcType=INTEGER},
      column_type = #{columnType,jdbcType=INTEGER},
      time_type = #{timeType,jdbcType=INTEGER},
      default_value = #{defaultValue,jdbcType=VARCHAR},
      value_extra = #{valueExtra,jdbcType=VARCHAR},
      id_support_type = #{idSupportType,jdbcType=VARCHAR},
      demand_list = #{demandList,jdbcType=VARCHAR},
      builder = #{builder,jdbcType=VARCHAR},
      others = #{others,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getSiteTags" resultMap="com.example.demoMysql.dao.SiteTagMapper.BaseResultMap">
    select site_id,tag_id,tdw_column,tdw_table,value_extra,created_at,updated_at from site_tag where tag_id=#{id} 
  </select>
</mapper>